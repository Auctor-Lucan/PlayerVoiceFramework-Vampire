// This is a list of all the events/categories that exist in this mod itself.
// - The "KEY" notes the base-category. For instance, "AttackMelee" is the base-category for melee-attacks.
// - The Values (if present) note separate optional sub-categories. NOTE THAT NOT EVERY CATEGORY HAS SUB-CATEGORIES!
//   - Those sub-categories (ONLY WHEN USED) will take priority above their base-category in specific situations.
//   - For example, If "AttackMelee" has a sub-category "AttackMeleeStaminaLow", when used this means that when you're at low stamina, the mod will play the low-stamina voice/sound in place of the default one.
//   - If no sub-category is used (or none matches the current situation), the mod will just use the default one.
{
  "PVEAttackMelee": [
    "PVEAttackMeleeStaminaLow",
    "PVEAttackMeleeStaminaOut"
  ],
  "PVEPowerAttackMelee": [
    "PVEPowerAttackMeleeStaminaLow"
  ],
  "PVEAttackBow": [
    "PVEAttackBowLow"
  ],
  "PVEUnsheathe": [
    "PVEUnsheatheBow",
    "PVEUnsheatheSpell",
    "PVEUnsheatheMelee"
  ],
  "PVESheathe": [
    "PVESheatheBow",
    "PVESheatheSpell",
    "PVESheatheMelee"
  ],
  "PVEBash": [
    "PVEBashStaminaLow"
  ],
  "PVEDeath": [],
  "PVEReceivedHit": [
    "PVEReceivedPowerHit"
  ],
  "PVEBlockReceivedHit": [
    "PVEBlockReceivedPowerHit"
  ],
  "PVEReceivedFriendlyHeal": [],
  "PVEFinisherStart": [],
  "PVEFinisherEnd": [],
  "PVECastSpell": [
    "PVECastSpell<SpellName>"
    // "<SpellName>" is being replaced by whatever is returned by "spell#getName()". For "Flames", this would result in "PVECastSpellFlames"
  ],
  "PVEFireSpell": [
    "PVEFireSpell<SpellName>"
    // "<SpellName>" is being replaced by whatever is returned by "spell#getName()". For "Flames", this would result in "PVEFireSpellFlames"
  ],
  "PVESit": [],
  "PVEGetUp": [],
  "PVESleepStart": [],
  "PVESleepEnd": [],
  "PVEJump": [],
  "PVEMountHorse": [],
  "PVEDismountHorse": [],
  // Called at the end of dismounting rather than the start... Nothing to do about it i guess...
  "PVEMountDragon": [],
  "PVEDismountDragon": [],
  // Couldn't test this myself due to story-requirements, but i assume this will work the same as PVEDismountHorse?
  "PVESprintIdle": [],
  // Called whenever the right foot touches the ground (according to the UESP-Wiki)
  "PVEChangeCell<CellName>": [],
  // BE CAREFUL WITH THIS - This gets called on literally every cell change - Riverwood alone consists of more than 5 exterior-cells.
  "PVEPickupItem": [
    "PVEPickupItemArmor",
    "PVEPickupItemBook",
    "PVEPickupItemWeapon",
    "PVEPickupItemAmmo",
    "PVEPickupItemPotion"
  ],
  // This is VERY complicated. Shout-Sounds are separated into their word-parts.
  // Here's a really, really simple rundown with "Unrelenting Force" as an example
  // The first word "Fus" will be "PVECastShoutUnrelentingForce-Fus"
  // The second word "Ro" will be "PVECastShoutUnrelentingForce-FusRo" - This will be used when shouting "Fus-Ro", without the third word.
  // The third word "Dah" will be "PVECastShoutUnrelentingForce-FusRoDa" (Without "h" at the end) - This will SKIP THE SECOND WORD when shouting all 3 words, aka "Fus-Ro-Dah"
  //
  // So when using 3 words, it'd call "PVECastShoutUnrelentingForce-Fus" for the first word, and then "PVECastShoutUnrelentingForce-FusRoDa" afterward.
  // However when using 2 words, it'd call "PVECastShoutUnrelentingForce-Fus" for the first word, and then "PVECastShoutUnrelentingForce-FusRo" afterward.
  // When using only one word, it'd only call ""PVECastShoutUnrelentingForce-Fus", and that's it.
  // If you need ANY help with this, please ask on my discord server, I understand you... Implementing those wasn't easy either...
  "PVECastShout<ShoutName>-<WordSequence>": []
}