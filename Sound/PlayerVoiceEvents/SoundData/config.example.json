// All comments in this file (//...) are technically invalid. Json supports no comments, these are just here to explain stuff.
// DONT USE COMMENTS IN YOUR config.json!
{
  // "sounds" contains all the events you want to register sounds for.
  "sounds": {
    // This object registers for the event "PVEAttackMelee"
    // For a list of valid events, see PVE-Events.jsonc
    "PVEAttackMelee": {
      // (Default: 100, Format: 0 -> 100) The percentage chance that this event will play a sound.
      "chance": 100,
      // (Default: 0.0, Format: Seconds) the cooldown applied to this event once a sound plays.
      "cooldown": 0.0,
      // (Default: false, Format: true/false) If true, any sounds from this event can be cut off by other events if this is still playing
      "canBeOverridden": true,
      // (Default: false, Format: true/false) If true, this event will ALWAYS cut off all currently playing sound files. Useful for events that MUST play (e.g. Shouts).
      "forceOverrideOthers": true,
      // (Default: 1.0, Format: 0.0 (Silent) -> ???) The volume at which the event-sounds play
      // No idea how high this can go, and my ears don't want to test...
      "volume": 1.0,
      // A list of "packs", where each "pack" can define a condition and a list of files to randomly select from
      // These are evaluated in the order they are presented in, where the first sound that has a matching condition plays.
      "audio": [
        // First pack
        {
          // Condition for this pack - This example means that the pack only plays if the Player has less than 30% Stamina
          // Conditions can either be left out, or kept empty for them to always be true.
          // The expression-format is technically the exact same as in almost every programming language.
          // - You can use Brackets for specifying the priority of multiple conditions.
          // - You can use || (OR) and && (AND) characters to specify how multiple expressions are handled
          // - For comparisons, you can use == (EQUALS), != (NOT EQUALS), < | <= (LESS THAN | LESS THAN OR EQUALS), > | >= (GREATER THAN OR EQUALS) and *= (CONTAINS - ONLY FOR STRING VALUES)
          // - Additionally, string value comparions MUST be done within ' characters, to allow for proper evaluation on some characters.
          // - All other values MUST NOT have ' characters.
          // - Here are some valid examples:
          // "GetPlayerStaminaPercentage < 50"
          // "GetPlayerStaminaPercentage < 50 && GetPlayerName == 'Luna'"
          // "(GetPlayerStaminaPercentage < 50 && GetPlayerHealthPercentage < 50) || SomeOtherCondition == true"
          "condition": "GetPlayerStaminaPercentage < 30",
          // A list of files that this pack contains - One of those will be randomly selected when playing it.
          // The path still start from the "SoundData" folder, which is "Sound/PlayerVoiceEvents/SoundData/your/custom/path/..."
          "files": [
            "path/to/melee-attack/lowstamina1.wav",
            "path/to/melee-attack/lowstamina2.wav",
            "path/to/melee-attack/lowstamina3.wav",
            "path/to/melee-attack/lowstamina4.wav",
            "path/to/melee-attack/lowstamina5.wav"
          ]
        },
        // Default Pack if condition above didn't match
        {
          "files": [
            "path/to/melee-attack/default1.wav",
            "path/to/melee-attack/default2.wav",
            "path/to/melee-attack/default3.wav",
            "path/to/melee-attack/default4.wav",
            "path/to/melee-attack/default5.wav"
          ]
        }
      ]
    },
    //
    "PVEPowerAttackMelee": {
      // This object registers for the event "PVEPowerAttackMelee"
      // ...
      // ...
    }
  }
}